# Specify
# 'debug=false' var to disable detailed Rally output.
# 'run_positive_test_cases=false' var to disable positive Rally test cases
# 'run_negative_heketi_device_disable_test_cases=false' var to disable negative
#     Rally test cases where heketi device get disabled and then enabled.
# 'run_negative_heketi_node_disable_test_cases=false' var to disable negative
#     Rally test cases where heketi node get disabled and then enabled.
# 'run_negative_restart_glusterd_service_test_cases=false' to disable negative
#     Rally test cases where one of 'glusterd' services gets restarted.
# 'run_negative_reboot_gluster_node_test_cases=false' to disable negative
#     Rally test cases where one of Gluster nodes gets rebooted.
---
- hosts: localhost
  connection: local
  gather_facts: yes
  vars:
    debug: true
    run_positive_test_cases: true
    run_negative_heketi_device_disable_test_cases: true
    run_negative_heketi_node_disable_test_cases: true
    # TODO(vponomar): set following two back to 'true' when BZ-1632873 is fixed
    run_negative_restart_glusterd_service_test_cases: false
    run_negative_reboot_gluster_node_test_cases: false
  tasks:
  - name: List defined vars for debug reasons
    debug:
      msg: "{{ hostvars }}"
  - name: Check that not all tests are disabled
    fail:
      msg: "All tests are disabled, please, enable, at least, one test group."
    when:
    - not (run_positive_test_cases | bool)
    - not (run_negative_heketi_device_disable_test_cases | bool)
    - not (run_negative_heketi_node_disable_test_cases | bool)
    - not (run_negative_restart_glusterd_service_test_cases | bool)
    - not (run_negative_reboot_gluster_node_test_cases | bool)
  - name: Check that vars which are going to be calculated are not defined
    fail:
      msg: "This playbook expects only 'tests_config_path' var be provided."
    when: "'master_ipv4' in hostvars['localhost'] or
           'heketi_server_url' in hostvars['localhost'] or
           'heketi_username' in hostvars['localhost'] or
           'heketi_secret' in hostvars['localhost'] or
           'ocp_config_path' in hostvars['localhost'] or
           'venv_dir' in hostvars['localhost'] or
           'cwd' in hostvars['localhost']"
  - name: Read info about OCP cluster
    command: "python -c \"import yaml ;
        config = yaml.load(open('{{ tests_config_path }}', 'r'));
        print(list(config['ocp_servers']['master'].keys())[0]);
        print(config['openshift']['heketi_config']['heketi_server_url']);
        print(config['openshift']['heketi_config']['heketi_cli_user']);
        print(config['openshift']['heketi_config']['heketi_cli_key'])\""
    register: config_data
  - name: Save config data to the host vars
    set_fact:
      master_ipv4: "{{ config_data.stdout_lines[0] }}"
      heketi_server_url: "{{ config_data.stdout_lines[1] }}"
      heketi_username: "{{ config_data.stdout_lines[2] }}"
      heketi_secret: "{{ config_data.stdout_lines[3] }}"
  - set_fact:
      ocp_config_path: "/tmp/fetched/master_node_{{ master_ipv4 }}/kube_config"
      venv_dir: "{{ lookup('env', 'VIRTUAL_ENV') }}"
  - set_fact:
      cwd: "{{ venv_dir }}/../.."
  - name: Copy OCP kube config from OCP Master node to the localhost
    fetch:
      src: "~/.kube/config"
      dest: "{{ hostvars['localhost'].ocp_config_path }}"
      flat: true
    delegate_to: "{{ master_ipv4 }}"
  - name: Create tag  for rally tasks to use for report generation
    set_fact:
      rally_task_tag: "rally-{{ ansible_date_time.iso8601_basic_short }}"
  - name: Define name for Rally log file
    set_fact:
      rally_log_file: "{{ cwd }}/{{ rally_task_tag }}.log"
  - name: Create Rally log file
    copy:
      dest: "{{ rally_log_file }}"
      content: ""
      force: no
      mode: 0664

  - name: Define boolean var for tracking failure injection healthiness
    set_fact:
      stop_playbook_execution: false

  # --- Run positive test cases ---
  - name: Run positive Rally test cases
    block:
    - name: Run Rally positive CI test cases
      command: "{{ venv_dir }}/bin/rally
                  --plugin-paths {{ cwd }}/heketi_rally_plugin
                  --log-file {{ rally_log_file }}
                  {{ '--debug' if (not not (debug | bool)) else '' }}
                  task start {{ cwd }}/samples/ci/positive-test-cases.yaml
                  --tag {{ rally_task_tag }}
                  --task-args heketi_server_url={{ heketi_server_url
                    }},heketi_username={{ heketi_username
                    }},heketi_secret={{ heketi_secret
                    }},ocp_config_path={{ ocp_config_path }}"
      register: rally_positive_output
      ignore_errors: true
    - name: Print Rally output for positive test cases
      debug:
        msg: "{{ rally_positive_output }}"
    when: not not (run_positive_test_cases | bool)

  # --- Run negative test cases ---
  - name: "Run negative test cases disabling one of heketi devices"
    block:
    - name: "Run negative Rally test case #1 in background"
      command: "{{ venv_dir }}/bin/rally
                  --plugin-paths {{ cwd }}/heketi_rally_plugin
                  --log-file {{ rally_log_file }}
                  {{ '--debug' if (not not (debug | bool)) else '' }}
                  task start {{ cwd }}/samples/ci/negative-pvc-create-delete.yaml
                  --tag {{ rally_task_tag }}
                  --task-args ocp_config_path={{ ocp_config_path 
                    }},title_suffix='heketi_device_disable',volume_type='file'"
      async: 300
      poll: 0
      register: rally_1_async
      ignore_errors: true
  
    - name: "Run negative Rally test case #5 in background"
      command: "{{ venv_dir }}/bin/rally
                  --plugin-paths {{ cwd }}/heketi_rally_plugin
                  --log-file {{ rally_log_file }}
                  {{ '--debug' if (not not (debug | bool)) else '' }}
                  task start {{ cwd }}/samples/ci/negative-pvc-create-delete.yaml
                  --tag {{ rally_task_tag }}
                  --task-args ocp_config_path={{ ocp_config_path 
                    }},title_suffix='heketi_device_disable',volume_type='block'"
      async: 300
      poll: 0
      register: rally_5_async
      ignore_errors: true
  
    - name: "Run negative Rally test case #9 in background"
      command: "{{ venv_dir }}/bin/rally
                  --plugin-paths {{ cwd }}/heketi_rally_plugin
                  --log-file {{ rally_log_file }}
                  {{ '--debug' if (not not (debug | bool)) else '' }}
                  task start {{ cwd }}/samples/ci/negative-heketi-volume-create-delete.yaml
                  --tag {{ rally_task_tag }}
                  --task-args heketi_server_url={{ heketi_server_url
                    }},heketi_username={{ heketi_username
                    }},heketi_secret={{ heketi_secret
                    }},title_suffix='heketi_device_disable',volume_type='file'"
      async: 300
      poll: 0
      register: rally_9_async
      ignore_errors: true
  
    - name: "Run negative Rally test case #13 in background"
      command: "{{ venv_dir }}/bin/rally
                  --plugin-paths {{ cwd }}/heketi_rally_plugin
                  --log-file {{ rally_log_file }}
                  {{ '--debug' if (not not (debug | bool)) else '' }}
                  task start {{ cwd }}/samples/ci/negative-heketi-volume-create-delete.yaml
                  --tag {{ rally_task_tag }}
                  --task-args heketi_server_url={{ heketi_server_url
                    }},heketi_username={{ heketi_username
                    }},heketi_secret={{ heketi_secret
                    }},title_suffix='heketi_device_disable',volume_type='block'"
      async: 300
      poll: 0
      register: rally_13_async
      ignore_errors: true

    - block:
      - name: "Disable and enable Heketi device in parallel for Rally test case"
        import_role:
          name: heketi-random-device-disable-enable
        vars:
          heketi_server_url: "{{ heketi_server_url }}"
          heketi_user: "{{ heketi_username }}"
          heketi_secret: "{{ heketi_secret }}"
          downtime_in_seconds: 10
        delegate_to: "{{ master_ipv4 }}"
        delegate_facts: false
      rescue:
      - set_fact:
          current_block_failed: True
      always:
      - name: "Check async status of negative Rally test cases #1,5,9,13"
        include_role: name='check-async-job-status'
        vars:
          ansible_job_id: "{{ item }}"
        with_items:
        - "{{ rally_1_async.ansible_job_id }}"
        - "{{ rally_5_async.ansible_job_id }}"
        - "{{ rally_9_async.ansible_job_id }}"
        - "{{ rally_13_async.ansible_job_id }}"
    - set_fact:
        stop_playbook_execution: "{{ current_block_failed is defined }}"
    when:
    - not not (run_negative_heketi_device_disable_test_cases | bool)
    - not stop_playbook_execution

  - name: "Run negative test cases disabling one of heketi nodes"
    block:
    - name: "Run negative Rally test case #2 in background"
      command: "{{ venv_dir }}/bin/rally
                  --plugin-paths {{ cwd }}/heketi_rally_plugin
                  --log-file {{ rally_log_file }}
                  {{ '--debug' if (not not (debug | bool)) else '' }}
                  task start {{ cwd }}/samples/ci/negative-pvc-create-delete.yaml
                  --tag {{ rally_task_tag }}
                  --task-args ocp_config_path={{ ocp_config_path 
                    }},title_suffix='heketi_node_disable',volume_type='file'"
      async: 300
      poll: 0
      register: rally_2_async
      ignore_errors: true
  
    - name: "Run negative Rally test case #6 in background"
      command: "{{ venv_dir }}/bin/rally
                  --plugin-paths {{ cwd }}/heketi_rally_plugin
                  --log-file {{ rally_log_file }}
                  {{ '--debug' if (not not (debug | bool)) else '' }}
                  task start {{ cwd }}/samples/ci/negative-pvc-create-delete.yaml
                  --tag {{ rally_task_tag }}
                  --task-args ocp_config_path={{ ocp_config_path 
                    }},title_suffix='heketi_node_disable',volume_type='block'"
      async: 300
      poll: 0
      register: rally_6_async
      ignore_errors: true
  
    - name: "Run negative Rally test case #10 in background"
      command: "{{ venv_dir }}/bin/rally
                  --plugin-paths {{ cwd }}/heketi_rally_plugin
                  --log-file {{ rally_log_file }}
                  {{ '--debug' if (not not (debug | bool)) else '' }}
                  task start {{ cwd }}/samples/ci/negative-heketi-volume-create-delete.yaml
                  --tag {{ rally_task_tag }}
                  --task-args heketi_server_url={{ heketi_server_url
                    }},heketi_username={{ heketi_username
                    }},heketi_secret={{ heketi_secret
                    }},title_suffix='heketi_node_disable',volume_type='file'"
      async: 300
      poll: 0
      register: rally_10_async
      ignore_errors: true
  
    - name: "Run negative Rally test case #14 in background"
      command: "{{ venv_dir }}/bin/rally
                  --plugin-paths {{ cwd }}/heketi_rally_plugin
                  --log-file {{ rally_log_file }}
                  {{ '--debug' if (not not (debug | bool)) else '' }}
                  task start {{ cwd }}/samples/ci/negative-heketi-volume-create-delete.yaml
                  --tag {{ rally_task_tag }}
                  --task-args heketi_server_url={{ heketi_server_url
                    }},heketi_username={{ heketi_username
                    }},heketi_secret={{ heketi_secret
                    }},title_suffix='heketi_node_disable',volume_type='block'"
      async: 300
      poll: 0
      register: rally_14_async
      ignore_errors: true

    - block:
      - name: "Disable and enable Heketi node in parallel for Rally test case"
        import_role:
          name: heketi-random-node-disable-enable
        vars:
          heketi_server_url: "{{ heketi_server_url }}"
          heketi_user: "{{ heketi_username }}"
          heketi_secret: "{{ heketi_secret }}"
          downtime_in_seconds: 10
        delegate_to: "{{ master_ipv4 }}"
        delegate_facts: false
      rescue:
      - set_fact:
          current_block_failed: True
      always:
      - name: "Check async status of negative Rally test cases #2,6,10,14"
        include_role: name='check-async-job-status'
        vars:
          ansible_job_id: "{{ item }}"
        with_items:
        - "{{ rally_2_async.ansible_job_id }}"
        - "{{ rally_6_async.ansible_job_id }}"
        - "{{ rally_10_async.ansible_job_id }}"
        - "{{ rally_14_async.ansible_job_id }}"
    - set_fact:
        stop_playbook_execution: "{{ current_block_failed is defined }}"
    when:
    - not not (run_negative_heketi_node_disable_test_cases | bool)
    - not stop_playbook_execution

  - name: "Run negative test cases restarting one of 'glusterd' services"
    block:
    - name: "Run negative Rally test case #3 in background"
      command: "{{ venv_dir }}/bin/rally
                  --plugin-paths {{ cwd }}/heketi_rally_plugin
                  --log-file {{ rally_log_file }}
                  {{ '--debug' if (not not (debug | bool)) else '' }}
                  task start {{ cwd }}/samples/ci/negative-pvc-create-delete.yaml
                  --tag {{ rally_task_tag }}
                  --task-args ocp_config_path={{ ocp_config_path 
                    }},title_suffix='glusterd_restart',volume_type='file'"
      async: 300
      poll: 0
      register: rally_3_async
      ignore_errors: true
  
    - name: "Run negative Rally test case #7 in background"
      command: "{{ venv_dir }}/bin/rally
                  --plugin-paths {{ cwd }}/heketi_rally_plugin
                  --log-file {{ rally_log_file }}
                  {{ '--debug' if (not not (debug | bool)) else '' }}
                  task start {{ cwd }}/samples/ci/negative-pvc-create-delete.yaml
                  --tag {{ rally_task_tag }}
                  --task-args ocp_config_path={{ ocp_config_path 
                    }},title_suffix='glusterd_restart',volume_type='block'"
      async: 300
      poll: 0
      register: rally_7_async
      ignore_errors: true
  
    - name: "Run negative Rally test case #11 in background"
      command: "{{ venv_dir }}/bin/rally
                  --plugin-paths {{ cwd }}/heketi_rally_plugin
                  --log-file {{ rally_log_file }}
                  {{ '--debug' if (not not (debug | bool)) else '' }}
                  task start {{ cwd }}/samples/ci/negative-heketi-volume-create-delete.yaml
                  --tag {{ rally_task_tag }}
                  --task-args heketi_server_url={{ heketi_server_url
                    }},heketi_username={{ heketi_username
                    }},heketi_secret={{ heketi_secret
                    }},title_suffix='glusterd_restart',volume_type='file'"
      async: 300
      poll: 0
      register: rally_11_async
      ignore_errors: true
  
    - name: "Run negative Rally test case #15 in background"
      command: "{{ venv_dir }}/bin/rally
                  --plugin-paths {{ cwd }}/heketi_rally_plugin
                  --log-file {{ rally_log_file }}
                  {{ '--debug' if (not not (debug | bool)) else '' }}
                  task start {{ cwd }}/samples/ci/negative-heketi-volume-create-delete.yaml
                  --tag {{ rally_task_tag }}
                  --task-args heketi_server_url={{ heketi_server_url
                    }},heketi_username={{ heketi_username
                    }},heketi_secret={{ heketi_secret
                    }},title_suffix='glusterd_restart',volume_type='block'"
      async: 300
      poll: 0
      register: rally_15_async
      ignore_errors: true

    - block:
      - name: Restart glusterd service in one of the gluster PODs
        import_role:
          name: glusterd-restart
        vars:
          downtime_in_seconds: 10
        delegate_to: "{{ master_ipv4 }}"
        delegate_facts: false
      rescue:
      - set_fact:
          current_block_failed: True
      always:
      - name: "Check async status of negative Rally test cases #3,7,11,15"
        include_role: name='check-async-job-status'
        vars:
          ansible_job_id: "{{ item }}"
        with_items:
        - "{{ rally_3_async.ansible_job_id }}"
        - "{{ rally_7_async.ansible_job_id }}"
        - "{{ rally_11_async.ansible_job_id }}"
        - "{{ rally_15_async.ansible_job_id }}"
    - set_fact:
        stop_playbook_execution: "{{ current_block_failed is defined }}"
    when:
    # NOTE(vponomar): Skip this negative test due to BZ-1632873
    - false
    - not not (run_negative_restart_glusterd_service_test_cases | bool)
    - not stop_playbook_execution

  - name: "Run negative test cases restarting one of 'Gluster' nodes"
    block:
    - name: "Run negative Rally test case #4 in background"
      command: "{{ venv_dir }}/bin/rally
                  --plugin-paths {{ cwd }}/heketi_rally_plugin
                  --log-file {{ rally_log_file }}
                  {{ '--debug' if (not not (debug | bool)) else '' }}
                  task start {{ cwd }}/samples/ci/negative-pvc-create-delete.yaml
                  --tag {{ rally_task_tag }}
                  --task-args ocp_config_path={{ ocp_config_path 
                    }},title_suffix='reboot_gluster_node',volume_type='file'"
      async: 300
      poll: 0
      register: rally_4_async
      ignore_errors: true
  
    - name: "Run negative Rally test case #8 in background"
      command: "{{ venv_dir }}/bin/rally
                  --plugin-paths {{ cwd }}/heketi_rally_plugin
                  --log-file {{ rally_log_file }}
                  {{ '--debug' if (not not (debug | bool)) else '' }}
                  task start {{ cwd }}/samples/ci/negative-pvc-create-delete.yaml
                  --tag {{ rally_task_tag }}
                  --task-args ocp_config_path={{ ocp_config_path 
                    }},title_suffix='reboot_gluster_node',volume_type='block'"
      async: 300
      poll: 0
      register: rally_8_async
      ignore_errors: true

    - name: "Run negative Rally test case #12 in background"
      command: "{{ venv_dir }}/bin/rally
                  --plugin-paths {{ cwd }}/heketi_rally_plugin
                  --log-file {{ rally_log_file }}
                  {{ '--debug' if (not not (debug | bool)) else '' }}
                  task start {{ cwd }}/samples/ci/negative-heketi-volume-create-delete.yaml
                  --tag {{ rally_task_tag }}
                  --task-args heketi_server_url={{ heketi_server_url
                    }},heketi_username={{ heketi_username
                    }},heketi_secret={{ heketi_secret
                    }},title_suffix='reboot_gluster_node',volume_type='file'"
      async: 300
      poll: 0
      register: rally_12_async
      ignore_errors: true

    - name: "Run negative Rally test case #16 in background"
      command: "{{ venv_dir }}/bin/rally
                  --plugin-paths {{ cwd }}/heketi_rally_plugin
                  --log-file {{ rally_log_file }}
                  {{ '--debug' if (not not (debug | bool)) else '' }}
                  task start {{ cwd }}/samples/ci/negative-heketi-volume-create-delete.yaml
                  --tag {{ rally_task_tag }}
                  --task-args heketi_server_url={{ heketi_server_url
                    }},heketi_username={{ heketi_username
                    }},heketi_secret={{ heketi_secret
                    }},title_suffix='reboot_gluster_node',volume_type='block'"
      async: 300
      poll: 0
      register: rally_16_async
      ignore_errors: true
  
    - block:  
      - name: Reboot gluster node
        import_role:
          name: gluster-node-reboot
        delegate_to: "{{ master_ipv4 }}"
      rescue:
      - set_fact:
          current_block_failed: True
      always:
      - name: "Check async status of negative Rally test cases #4,8,12,16"
        include_role: name='check-async-job-status'
        vars:
          ansible_job_id: "{{ item }}"
        with_items:
        - "{{ rally_4_async.ansible_job_id }}"
        - "{{ rally_8_async.ansible_job_id }}"
        - "{{ rally_12_async.ansible_job_id }}"
        - "{{ rally_16_async.ansible_job_id }}"
    - set_fact:
        stop_playbook_execution: "{{ current_block_failed is defined }}"
    when:
    # NOTE(vponomar): Skip this negative test due to BZ-1632873
    - false
    - not not (run_negative_reboot_gluster_node_test_cases | bool)
    - not stop_playbook_execution

  # --- Generate Rally test run report ---
  - name: "Get list of task UUIDs by our special tag"
    shell: "{{ venv_dir }}/bin/rally
                 --plugin-paths {{ cwd }}/heketi_rally_plugin
                 --log-file {{ rally_log_file }}
                 task list --tag {{ rally_task_tag }} | grep {{
                    rally_task_tag }} | awk '{print $2}'"
    register: task_list_raw

  - name: "Cut task UUIDs from command output and save to the var"
    set_fact: task_uuids="{{ task_list_raw.stdout_lines | join(' ') }}"
  - name: "DEBUG. Print task UUIDs as string"
    debug: msg="{{ task_uuids }}"

  - name: "Calculate path to the Rally test run report"
    set_fact: report_path="{{ cwd + '/' + rally_task_tag }}.xml"
  - name: "Generate rally report for all the tasks which have our special tag"
    command: "{{ venv_dir }}/bin/rally
                 --plugin-paths {{ cwd }}/heketi_rally_plugin
                 --log-file {{ rally_log_file }}
                 task export --uuid {{ task_uuids }}
                 --type junit-xml-single-testsuite --to {{ report_path }}"
  - name: "Print information about generated Rally test run report"
    debug:
      msg: "INFO. Generated test run report in 'junit-xml' format. Saved in '{{
                report_path }}' file."

  # --- Fail playbook if some of the failure injections failed ---
  - name: Check whether we have failed failure injections or not
    fail:
      msg: "Some of failure injections have failed. Hence, marking playbook
            as 'failed' too."
    when: stop_playbook_execution
